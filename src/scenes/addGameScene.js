const { Scenes } = require('telegraf');
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

const addGameScene = new Scenes.WizardScene(
  'add_game_scene',
  // –®–∞–≥ 1: –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
  async (ctx) => {
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:', {
      reply_markup: {
        inline_keyboard: [[{ text: 'üîô –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_add_game' }]]
      }
    });
    ctx.scene.session.gameData = {};
    return ctx.wizard.next();
  },
  // –®–∞–≥ 2: –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
  async (ctx) => {
    if (!ctx.message?.text) return;
    ctx.scene.session.gameData.title = ctx.message.text;
    await ctx.reply(
      '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú\n' +
      '–ù–∞–ø—Ä–∏–º–µ—Ä: 25.12.2024 19:00'
    );
    return ctx.wizard.next();
  },
  // –®–∞–≥ 3: –ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
  async (ctx) => {
    if (!ctx.message?.text) return;
    const [date, time] = ctx.message.text.split(' ');
    const [day, month, year] = date.split('.');
    const [hours, minutes] = time.split(':');
    ctx.scene.session.gameData.date = new Date(year, month - 1, day, hours, minutes);
    
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã:');
    return ctx.wizard.next();
  },
  // –®–∞–≥ 4: –¶–µ–Ω–∞
  async (ctx) => {
    if (!ctx.message?.text) return;
    ctx.scene.session.gameData.location = ctx.message.text;
    
    await ctx.reply(
      '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–†–£–ë–õ–ò –ö–£–†–ê–ñ–ò–ö–ò"\n' +
      '–ù–∞–ø—Ä–∏–º–µ—Ä: 1000 2000'
    );
    return ctx.wizard.next();
  },
  // –®–∞–≥ 5: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç
  async (ctx) => {
    if (!ctx.message?.text) return;
    const [priceRub, priceKur] = ctx.message.text.split(' ').map(Number);
    ctx.scene.session.gameData.priceRub = priceRub;
    ctx.scene.session.gameData.priceKur = priceKur;
    
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç:');
    return ctx.wizard.next();
  },
  // –®–∞–≥ 6: –û–ø–∏—Å–∞–Ω–∏–µ
  async (ctx) => {
    if (!ctx.message?.text) return;
    ctx.scene.session.gameData.seats = parseInt(ctx.message.text);
    
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã:');
    return ctx.wizard.next();
  },
  // –®–∞–≥ 7: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  async (ctx) => {
    if (!ctx.message?.text) return;
    ctx.scene.session.gameData.description = ctx.message.text;
    
    await ctx.reply(
      '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–≥—Ä—ã (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"):',
      {
        reply_markup: {
          inline_keyboard: [[{ text: '‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data: 'skip_image' }]]
        }
      }
    );
    return ctx.wizard.next();
  },
  // –®–∞–≥ 8: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  async (ctx) => {
    try {
      if (ctx.message?.photo) {
        ctx.scene.session.gameData.imageId = ctx.message.photo[ctx.message.photo.length - 1].file_id;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const user = await prisma.user.findUnique({
        where: { telegramId: ctx.from.id }
      });

      if (!user) {
        throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const game = await prisma.game.create({
        data: {
          ...ctx.scene.session.gameData,
          creator: {
            connect: { id: user.id } // –°–≤—è–∑—ã–≤–∞–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
          }
        }
      });

      await ctx.reply('‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
      await ctx.scene.leave();

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–≥—Ä–∞–º–∏
      await ctx.reply('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏', {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–≥—Ä–∞–º–∏', callback_data: 'manage_games' }]
          ]
        }
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã:', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      await ctx.scene.leave();
    }
  }
);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã
addGameScene.action('cancel_add_game', async (ctx) => {
  await ctx.reply('–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–µ–Ω–æ');
  await ctx.scene.leave();
  await ctx.reply('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏', {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–≥—Ä–∞–º–∏', callback_data: 'manage_games' }]
      ]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
addGameScene.action('skip_image', async (ctx) => {
  try {
    await ctx.answerCbQuery();

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const user = await prisma.user.findUnique({
      where: { telegramId: ctx.from.id }
    });

    if (!user) {
      throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const game = await prisma.game.create({
      data: {
        ...ctx.scene.session.gameData,
        creator: {
          connect: { id: user.id } // –°–≤—è–∑—ã–≤–∞–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        }
      }
    });

    await ctx.reply('‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    await ctx.scene.leave();

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–≥—Ä–∞–º–∏
    await ctx.reply('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏', {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–≥—Ä–∞–º–∏', callback_data: 'manage_games' }]
        ]
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    await ctx.scene.leave();
  }
});

module.exports = addGameScene; 