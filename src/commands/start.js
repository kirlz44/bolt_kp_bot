const { checkUserRole, createUser } = require('../models/user');

module.exports = async (ctx) => {
  try {
    const userId = ctx.from.id;
    const userRole = await checkUserRole(userId);

    if (!userRole) {
      // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      await createUser(userId, 'user');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await ctx.reply(`–†–∞–¥—ã –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è ${ctx.from.first_name} –≤ –±–æ—Ç–µ –°—Ç—É–¥–∏–∏ –∏–≥—Ä "–ö—É—Ä–∞–∂-–ü—Ä–æ–¥–∞–∂"!`, {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üéØ –ö—É—Ä–∞–∂!', callback_data: 'start_bot' }]
          ]
        }
      });
    } else if (userRole === 'superadmin') {
      // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
      await ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –°—É–ø–µ—Ä–∞–¥–º–∏–Ω!', {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üéÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'open_menu' }],
            [{ text: '‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', callback_data: 'admin_panel' }]
          ]
        }
      });
    } else {
      // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      await ctx.reply(`–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${ctx.from.first_name}!`, {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'open_menu' }]
          ]
        }
      });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ start:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};
