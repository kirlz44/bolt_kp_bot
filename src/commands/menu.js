const getMenuKeyboard = (userRole) => {
  let keyboard = [
    [{ text: 'üíé –°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º', callback_data: 'become_partner' }],
    [{ text: 'üé° –ö—Ä—É—Ç–∏—Ç—å –∫–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã', callback_data: 'spin_wheel' }],
    [{ text: 'üõç –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', callback_data: 'marketplace' }],
    [{ text: 'üéÆ –ò–≥—Ä—ã', callback_data: 'games' }],
    [{ text: 'üé™ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', callback_data: 'events' }],
    [{ text: 'üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å', callback_data: 'earn' }],
    [{ text: 'üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data: 'referral_program' }],
    [{ text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }]
  ];

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
  if (userRole === 'partner') {
    keyboard.splice(1, 0, [{ text: 'üé≤ –ú–æ–∏ –∏–≥—Ä—ã', callback_data: 'my_games' }]);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
  if (userRole === 'admin' || userRole === 'superadmin') {
    keyboard.push([{ text: '‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', callback_data: 'admin_panel' }]);
  }

  return keyboard;
};

module.exports = async (ctx) => {
  try {
    const keyboard = await getMenuKeyboard(ctx.state.userRole);
    await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', {
      reply_markup: {
        inline_keyboard: keyboard
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –º–µ–Ω—é:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
module.exports.getMenuKeyboard = getMenuKeyboard;
