const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

module.exports = async (ctx) => {
  try {
    if (ctx.state.userRole !== 'admin' && ctx.state.userRole !== 'superadmin') {
      return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–ª–µ—Å–æ–º —Ñ–æ—Ä—Ç—É–Ω—ã');
    }

    const message = `*–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–µ—Å–æ–º —Ñ–æ—Ä—Ç—É–Ω—ã*\n\n` +
      `–¢–∏–ø—ã –ø—Ä–∏–∑–æ–≤:\n` +
      `1. –ö—É—Ä–∞–∂–∏–∫–∏ (—É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)\n` +
      `2. –°–∫–∏–¥–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä (–æ—Ç 5% –¥–æ 50%)\n` +
      `3. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑ (–ª—é–±–æ–π –ø—Ä–∏–∑ –Ω–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ)\n\n` +
      `‚ö†Ô∏è –°—É–º–º–∞ –≤—Å–µ—Ö –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100%`;

    const keyboard = [
      [{ text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∑', callback_data: 'add_wheel_prize' }],
      [{ text: 'üìã –°–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–æ–≤', callback_data: 'list_wheel_prizes' }],
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'admin_panel' }]
    ];

    await ctx.reply(message, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboard
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–µ—Å–æ–º:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};
